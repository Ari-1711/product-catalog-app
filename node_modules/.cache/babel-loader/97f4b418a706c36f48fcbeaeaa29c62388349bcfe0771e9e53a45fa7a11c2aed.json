{"ast":null,"code":"import React,{useState,useEffect}from'react';// Jangan lupa install prop-types jika belum: npm install prop-types\nimport ProductCard from'./components/ProductCard';// Pastikan path ini benar ke ProductCard.jsx Anda\nimport'./ProductCatalog.css';// Impor file CSS\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ProductCatalog(_ref){let{initialProducts}=_ref;const[searchTerm,setSearchTerm]=useState('');const[selectedCategory,setSelectedCategory]=useState('');// '' berarti 'All'\nconst[filteredProducts,setFilteredProducts]=useState([]);// Ekstrak kategori unik dari initialProducts\n// Tambahkan 'All' sebagai opsi pertama dan pastikan tidak ada duplikat jika 'All' sudah ada di data\nconst categories=initialProducts?['All',...new Set(initialProducts.map(p=>p.category))]:['All'];useEffect(()=>{// Pastikan initialProducts adalah array sebelum melakukan operasi filter/map\nconst productsToFilter=Array.isArray(initialProducts)?initialProducts:[];let products=productsToFilter;// Filter berdasarkan kategori yang dipilih\nif(selectedCategory&&selectedCategory!=='All'){products=products.filter(product=>product.category===selectedCategory);}// Filter berdasarkan istilah pencarian (cek nama produk)\nif(searchTerm){products=products.filter(product=>product.name.toLowerCase().includes(searchTerm.toLowerCase()));}setFilteredProducts(products);},[searchTerm,selectedCategory,initialProducts]);const handleSearchChange=event=>{setSearchTerm(event.target.value);};const handleCategoryChange=event=>{setSelectedCategory(event.target.value);};// Menangani kasus jika initialProducts belum terdefinisi atau bukan array\nif(!Array.isArray(initialProducts)){// Anda bisa menampilkan pesan loading atau pesan error, atau null\n// Untuk sekarang, kita tampilkan pesan bahwa data tidak tersedia jika initialProducts bukan array.\n// Atau, jika initialProducts mungkin undefined saat pertama kali load, Anda bisa juga:\n// if (initialProducts === undefined) return <p>Loading products...</p>;\n// if (!Array.isArray(initialProducts)) return <p className=\"no-products-message\">Product data is not available.</p>;\n// Untuk lebih aman, kita filter di useEffect dan biarkan render apa adanya\n}return/*#__PURE__*/_jsxs(\"div\",{className:\"catalog-container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"catalog-header\",children:\"\\uD83D\\uDECD\\uFE0F Product Catalog\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"catalog-controls\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search products by name...\",value:searchTerm,onChange:handleSearchChange,className:\"search-input\",\"aria-label\":\"Search products\"}),/*#__PURE__*/_jsx(\"select\",{value:selectedCategory,onChange:handleCategoryChange,className:\"category-select\",\"aria-label\":\"Filter by category\",children:categories.map(category=>/*#__PURE__*/_jsx(\"option\",{value:category==='All'?'':category,children:category==='All'||category===''?'All Categories':category},category))})]}),filteredProducts.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"product-list-container\",children:filteredProducts.map(product=>/*#__PURE__*/_jsx(ProductCard,{product:product},product.id))}):/*#__PURE__*/_jsx(\"p\",{className:\"no-products-message\",children:initialProducts&&initialProducts.length>0?'üòî No products found matching your criteria.':'Loading products or no products available.'})]});}// Validasi Props\n// Default props jika initialProducts tidak disediakan (opsional, tapi bagus)\nProductCatalog.defaultProps={initialProducts:[]// Default ke array kosong jika tidak ada prop yang diberikan\n};export default ProductCatalog;// <-- Pastikan ini ada dan tidak ada kesalahan ketik","map":{"version":3,"names":["React","useState","useEffect","ProductCard","jsx","_jsx","jsxs","_jsxs","ProductCatalog","_ref","initialProducts","searchTerm","setSearchTerm","selectedCategory","setSelectedCategory","filteredProducts","setFilteredProducts","categories","Set","map","p","category","productsToFilter","Array","isArray","products","filter","product","name","toLowerCase","includes","handleSearchChange","event","target","value","handleCategoryChange","className","children","type","placeholder","onChange","length","id","defaultProps"],"sources":["C:/dev/product-catalog-app/src/ProductCatalog.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types'; // Jangan lupa install prop-types jika belum: npm install prop-types\r\nimport ProductCard from './components/ProductCard'; // Pastikan path ini benar ke ProductCard.jsx Anda\r\nimport './ProductCatalog.css'; // Impor file CSS\r\n\r\nfunction ProductCatalog({ initialProducts }) {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedCategory, setSelectedCategory] = useState(''); // '' berarti 'All'\r\n  const [filteredProducts, setFilteredProducts] = useState([]);\r\n\r\n  // Ekstrak kategori unik dari initialProducts\r\n  // Tambahkan 'All' sebagai opsi pertama dan pastikan tidak ada duplikat jika 'All' sudah ada di data\r\n  const categories = initialProducts \r\n    ? ['All', ...new Set(initialProducts.map(p => p.category))] \r\n    : ['All'];\r\n\r\n  useEffect(() => {\r\n    // Pastikan initialProducts adalah array sebelum melakukan operasi filter/map\r\n    const productsToFilter = Array.isArray(initialProducts) ? initialProducts : [];\r\n    \r\n    let products = productsToFilter;\r\n\r\n    // Filter berdasarkan kategori yang dipilih\r\n    if (selectedCategory && selectedCategory !== 'All') {\r\n      products = products.filter(product => product.category === selectedCategory);\r\n    }\r\n\r\n    // Filter berdasarkan istilah pencarian (cek nama produk)\r\n    if (searchTerm) {\r\n      products = products.filter(product =>\r\n        product.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    }\r\n\r\n    setFilteredProducts(products);\r\n  }, [searchTerm, selectedCategory, initialProducts]);\r\n\r\n  const handleSearchChange = (event) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  const handleCategoryChange = (event) => {\r\n    setSelectedCategory(event.target.value);\r\n  };\r\n\r\n  // Menangani kasus jika initialProducts belum terdefinisi atau bukan array\r\n  if (!Array.isArray(initialProducts)) {\r\n    // Anda bisa menampilkan pesan loading atau pesan error, atau null\r\n    // Untuk sekarang, kita tampilkan pesan bahwa data tidak tersedia jika initialProducts bukan array.\r\n    // Atau, jika initialProducts mungkin undefined saat pertama kali load, Anda bisa juga:\r\n    // if (initialProducts === undefined) return <p>Loading products...</p>;\r\n    // if (!Array.isArray(initialProducts)) return <p className=\"no-products-message\">Product data is not available.</p>;\r\n    // Untuk lebih aman, kita filter di useEffect dan biarkan render apa adanya\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"catalog-container\">\r\n      <h1 className=\"catalog-header\">üõçÔ∏è Product Catalog</h1>\r\n\r\n      <div className=\"catalog-controls\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search products by name...\"\r\n          value={searchTerm}\r\n          onChange={handleSearchChange}\r\n          className=\"search-input\"\r\n          aria-label=\"Search products\"\r\n        />\r\n        <select\r\n          value={selectedCategory}\r\n          onChange={handleCategoryChange}\r\n          className=\"category-select\"\r\n          aria-label=\"Filter by category\"\r\n        >\r\n          {categories.map(category => (\r\n            <option key={category} value={category === 'All' ? '' : category}>\r\n              {/* Tampilkan 'All Categories' untuk nilai default atau 'All' */}\r\n              {category === 'All' || category === '' ? 'All Categories' : category}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      {filteredProducts.length > 0 ? (\r\n        <div className=\"product-list-container\">\r\n          {filteredProducts.map(product => (\r\n            <ProductCard key={product.id} product={product} />\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <p className=\"no-products-message\">\r\n          {initialProducts && initialProducts.length > 0 ? 'üòî No products found matching your criteria.' : 'Loading products or no products available.'}\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Validasi Props\r\nProductCatalog.propTypes = {\r\n  initialProducts: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    category: PropTypes.string.isRequired,\r\n    image: PropTypes.string.isRequired,\r\n  })), // Bisa jadi null atau undefined saat pertama load jika data async\r\n};\r\n\r\n// Default props jika initialProducts tidak disediakan (opsional, tapi bagus)\r\nProductCatalog.defaultProps = {\r\n  initialProducts: [], // Default ke array kosong jika tidak ada prop yang diberikan\r\n};\r\n\r\nexport default ProductCatalog; // <-- Pastikan ini ada dan tidak ada kesalahan ketik"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}