{"ast":null,"code":"import _objectSpread from\"C:/dev/product-catalog-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// src/context/CartContext.js\nimport React,{createContext,useState,useContext}from'react';// 1. Membuat Context\nimport{jsx as _jsx}from\"react/jsx-runtime\";const CartContext=/*#__PURE__*/createContext();// 2. Membuat Hook kustom untuk menggunakan CartContext (opsional tapi memudahkan)\nexport const useCart=()=>{return useContext(CartContext);};// 3. Membuat Provider Component\nexport const CartProvider=_ref=>{let{children}=_ref;const[cartItems,setCartItems]=useState([]);// State untuk menyimpan item di keranjang\n// Fungsi untuk menambahkan produk ke keranjang\nconst addToCart=productToAdd=>{setCartItems(prevItems=>{// Cek apakah produk sudah ada di keranjang\nconst existingItem=prevItems.find(item=>item.id===productToAdd.id);if(existingItem){// Jika sudah ada, tambahkan quantity-nya\nreturn prevItems.map(item=>item.id===productToAdd.id?_objectSpread(_objectSpread({},item),{},{quantity:item.quantity+1}):item);}else{// Jika belum ada, tambahkan produk baru dengan quantity 1\nreturn[...prevItems,_objectSpread(_objectSpread({},productToAdd),{},{quantity:1})];}});console.log('Keranjang setelah ditambah:',cartItems);// Untuk debug\nalert(\"\".concat(productToAdd.name,\" berhasil ditambahkan ke keranjang!\"));};// Fungsi untuk menghapus produk dari keranjang (contoh fungsi lain)\nconst removeFromCart=productId=>{setCartItems(prevItems=>prevItems.filter(item=>item.id!==productId));};// Fungsi untuk mengupdate kuantitas (contoh fungsi lain)\nconst updateQuantity=(productId,amount)=>{setCartItems(prevItems=>prevItems.map(item=>item.id===productId?_objectSpread(_objectSpread({},item),{},{quantity:Math.max(0,item.quantity+amount)})// Jangan sampai kurang dari 0\n:item).filter(item=>item.quantity>0)// Hapus item jika kuantitasnya 0\n);};// Nilai yang akan disediakan oleh Context Provider\nconst value={cartItems,addToCart,removeFromCart,updateQuantity,itemCount:cartItems.reduce((sum,item)=>sum+item.quantity,0)// Jumlah total item\n};return/*#__PURE__*/_jsx(CartContext.Provider,{value:value,children:children});};export default CartContext;// Ekspor context-nya juga jika diperlukan di tempat lain","map":{"version":3,"names":["React","createContext","useState","useContext","jsx","_jsx","CartContext","useCart","CartProvider","_ref","children","cartItems","setCartItems","addToCart","productToAdd","prevItems","existingItem","find","item","id","map","_objectSpread","quantity","console","log","alert","concat","name","removeFromCart","productId","filter","updateQuantity","amount","Math","max","value","itemCount","reduce","sum","Provider"],"sources":["C:/dev/product-catalog-app/src/context/CartContext.js"],"sourcesContent":["// src/context/CartContext.js\r\nimport React, { createContext, useState, useContext } from 'react';\r\n\r\n// 1. Membuat Context\r\nconst CartContext = createContext();\r\n\r\n// 2. Membuat Hook kustom untuk menggunakan CartContext (opsional tapi memudahkan)\r\nexport const useCart = () => {\r\n  return useContext(CartContext);\r\n};\r\n\r\n// 3. Membuat Provider Component\r\nexport const CartProvider = ({ children }) => {\r\n  const [cartItems, setCartItems] = useState([]); // State untuk menyimpan item di keranjang\r\n\r\n  // Fungsi untuk menambahkan produk ke keranjang\r\n  const addToCart = (productToAdd) => {\r\n    setCartItems((prevItems) => {\r\n      // Cek apakah produk sudah ada di keranjang\r\n      const existingItem = prevItems.find(item => item.id === productToAdd.id);\r\n      if (existingItem) {\r\n        // Jika sudah ada, tambahkan quantity-nya\r\n        return prevItems.map(item =>\r\n          item.id === productToAdd.id\r\n            ? { ...item, quantity: item.quantity + 1 }\r\n            : item\r\n        );\r\n      } else {\r\n        // Jika belum ada, tambahkan produk baru dengan quantity 1\r\n        return [...prevItems, { ...productToAdd, quantity: 1 }];\r\n      }\r\n    });\r\n    console.log('Keranjang setelah ditambah:', cartItems); // Untuk debug\r\n    alert(`${productToAdd.name} berhasil ditambahkan ke keranjang!`);\r\n  };\r\n\r\n  // Fungsi untuk menghapus produk dari keranjang (contoh fungsi lain)\r\n  const removeFromCart = (productId) => {\r\n    setCartItems((prevItems) =>\r\n      prevItems.filter(item => item.id !== productId)\r\n    );\r\n  };\r\n\r\n  // Fungsi untuk mengupdate kuantitas (contoh fungsi lain)\r\n  const updateQuantity = (productId, amount) => {\r\n    setCartItems((prevItems) =>\r\n      prevItems.map(item =>\r\n        item.id === productId\r\n          ? { ...item, quantity: Math.max(0, item.quantity + amount) } // Jangan sampai kurang dari 0\r\n          : item\r\n      ).filter(item => item.quantity > 0) // Hapus item jika kuantitasnya 0\r\n    );\r\n  };\r\n\r\n  // Nilai yang akan disediakan oleh Context Provider\r\n  const value = {\r\n    cartItems,\r\n    addToCart,\r\n    removeFromCart,\r\n    updateQuantity,\r\n    itemCount: cartItems.reduce((sum, item) => sum + item.quantity, 0) // Jumlah total item\r\n  };\r\n\r\n  return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\r\n};\r\n\r\nexport default CartContext; // Ekspor context-nya juga jika diperlukan di tempat lain"],"mappings":"+GAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,UAAU,KAAQ,OAAO,CAElE;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,KAAM,CAAAC,WAAW,cAAGL,aAAa,CAAC,CAAC,CAEnC;AACA,MAAO,MAAM,CAAAM,OAAO,CAAGA,CAAA,GAAM,CAC3B,MAAO,CAAAJ,UAAU,CAACG,WAAW,CAAC,CAChC,CAAC,CAED;AACA,MAAO,MAAM,CAAAE,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,SAAS,CAAEC,YAAY,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAAE;AAEhD;AACA,KAAM,CAAAW,SAAS,CAAIC,YAAY,EAAK,CAClCF,YAAY,CAAEG,SAAS,EAAK,CAC1B;AACA,KAAM,CAAAC,YAAY,CAAGD,SAAS,CAACE,IAAI,CAACC,IAAI,EAAIA,IAAI,CAACC,EAAE,GAAKL,YAAY,CAACK,EAAE,CAAC,CACxE,GAAIH,YAAY,CAAE,CAChB;AACA,MAAO,CAAAD,SAAS,CAACK,GAAG,CAACF,IAAI,EACvBA,IAAI,CAACC,EAAE,GAAKL,YAAY,CAACK,EAAE,CAAAE,aAAA,CAAAA,aAAA,IAClBH,IAAI,MAAEI,QAAQ,CAAEJ,IAAI,CAACI,QAAQ,CAAG,CAAC,GACtCJ,IACN,CAAC,CACH,CAAC,IAAM,CACL;AACA,MAAO,CAAC,GAAGH,SAAS,CAAAM,aAAA,CAAAA,aAAA,IAAOP,YAAY,MAAEQ,QAAQ,CAAE,CAAC,GAAG,CACzD,CACF,CAAC,CAAC,CACFC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAEb,SAAS,CAAC,CAAE;AACvDc,KAAK,IAAAC,MAAA,CAAIZ,YAAY,CAACa,IAAI,uCAAqC,CAAC,CAClE,CAAC,CAED;AACA,KAAM,CAAAC,cAAc,CAAIC,SAAS,EAAK,CACpCjB,YAAY,CAAEG,SAAS,EACrBA,SAAS,CAACe,MAAM,CAACZ,IAAI,EAAIA,IAAI,CAACC,EAAE,GAAKU,SAAS,CAChD,CAAC,CACH,CAAC,CAED;AACA,KAAM,CAAAE,cAAc,CAAGA,CAACF,SAAS,CAAEG,MAAM,GAAK,CAC5CpB,YAAY,CAAEG,SAAS,EACrBA,SAAS,CAACK,GAAG,CAACF,IAAI,EAChBA,IAAI,CAACC,EAAE,GAAKU,SAAS,CAAAR,aAAA,CAAAA,aAAA,IACZH,IAAI,MAAEI,QAAQ,CAAEW,IAAI,CAACC,GAAG,CAAC,CAAC,CAAEhB,IAAI,CAACI,QAAQ,CAAGU,MAAM,CAAC,EAAG;AAAA,CAC3Dd,IACN,CAAC,CAACY,MAAM,CAACZ,IAAI,EAAIA,IAAI,CAACI,QAAQ,CAAG,CAAC,CAAE;AACtC,CAAC,CACH,CAAC,CAED;AACA,KAAM,CAAAa,KAAK,CAAG,CACZxB,SAAS,CACTE,SAAS,CACTe,cAAc,CACdG,cAAc,CACdK,SAAS,CAAEzB,SAAS,CAAC0B,MAAM,CAAC,CAACC,GAAG,CAAEpB,IAAI,GAAKoB,GAAG,CAAGpB,IAAI,CAACI,QAAQ,CAAE,CAAC,CAAE;AACrE,CAAC,CAED,mBAAOjB,IAAA,CAACC,WAAW,CAACiC,QAAQ,EAACJ,KAAK,CAAEA,KAAM,CAAAzB,QAAA,CAAEA,QAAQ,CAAuB,CAAC,CAC9E,CAAC,CAED,cAAe,CAAAJ,WAAW,CAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}