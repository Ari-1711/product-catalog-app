{"ast":null,"code":"var _jsxFileName = \"C:\\\\product-catalog-app\\\\src\\\\ProductCatalog.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types'; // Jangan lupa install prop-types jika belum: npm install prop-types\nimport ProductCard from './components/ProductCard'; // Pastikan path ini benar ke ProductCard.jsx Anda\nimport './ProductCatalog.css'; // Impor file CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProductCatalog({\n  initialProducts\n}) {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState(''); // '' berarti 'All'\n  const [filteredProducts, setFilteredProducts] = useState([]);\n\n  // Ekstrak kategori unik dari initialProducts\n  // Tambahkan 'All' sebagai opsi pertama dan pastikan tidak ada duplikat jika 'All' sudah ada di data\n  const categories = initialProducts ? ['All', ...new Set(initialProducts.map(p => p.category))] : ['All'];\n  useEffect(() => {\n    // Pastikan initialProducts adalah array sebelum melakukan operasi filter/map\n    const productsToFilter = Array.isArray(initialProducts) ? initialProducts : [];\n    let products = productsToFilter;\n\n    // Filter berdasarkan kategori yang dipilih\n    if (selectedCategory && selectedCategory !== 'All') {\n      products = products.filter(product => product.category === selectedCategory);\n    }\n\n    // Filter berdasarkan istilah pencarian (cek nama produk)\n    if (searchTerm) {\n      products = products.filter(product => product.name.toLowerCase().includes(searchTerm.toLowerCase()));\n    }\n    setFilteredProducts(products);\n  }, [searchTerm, selectedCategory, initialProducts]);\n  const handleSearchChange = event => {\n    setSearchTerm(event.target.value);\n  };\n  const handleCategoryChange = event => {\n    setSelectedCategory(event.target.value);\n  };\n\n  // Menangani kasus jika initialProducts belum terdefinisi atau bukan array\n  if (!Array.isArray(initialProducts)) {\n    // Anda bisa menampilkan pesan loading atau pesan error, atau null\n    // Untuk sekarang, kita tampilkan pesan bahwa data tidak tersedia jika initialProducts bukan array.\n    // Atau, jika initialProducts mungkin undefined saat pertama kali load, Anda bisa juga:\n    // if (initialProducts === undefined) return <p>Loading products...</p>;\n    // if (!Array.isArray(initialProducts)) return <p className=\"no-products-message\">Product data is not available.</p>;\n    // Untuk lebih aman, kita filter di useEffect dan biarkan render apa adanya\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"catalog-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"catalog-header\",\n      children: \"\\uD83D\\uDECD\\uFE0F Product Catalog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"catalog-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search products by name...\",\n        value: searchTerm,\n        onChange: handleSearchChange,\n        className: \"search-input\",\n        \"aria-label\": \"Search products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCategory,\n        onChange: handleCategoryChange,\n        className: \"category-select\",\n        \"aria-label\": \"Filter by category\",\n        children: categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category === 'All' ? '' : category,\n          children: category === 'All' || category === '' ? 'All Categories' : category\n        }, category, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), filteredProducts.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-list-container\",\n      children: filteredProducts.map(product => /*#__PURE__*/_jsxDEV(ProductCard, {\n        product: product\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-products-message\",\n      children: initialProducts && initialProducts.length > 0 ? 'üòî No products found matching your criteria.' : 'Loading products or no products available.'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n// Validasi Props\n_s(ProductCatalog, \"BRCfaxvXWfLewCFs2kB9AnRZyM4=\");\n_c = ProductCatalog;\nProductCatalog.propTypes = {\n  initialProducts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    category: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired\n  })) // Bisa jadi null atau undefined saat pertama load jika data async\n};\n\n// Default props jika initialProducts tidak disediakan (opsional, tapi bagus)\nProductCatalog.defaultProps = {\n  initialProducts: [] // Default ke array kosong jika tidak ada prop yang diberikan\n};\nexport default ProductCatalog; // <-- Pastikan ini ada dan tidak ada kesalahan ketik\nvar _c;\n$RefreshReg$(_c, \"ProductCatalog\");","map":{"version":3,"names":["React","useState","useEffect","PropTypes","ProductCard","jsxDEV","_jsxDEV","ProductCatalog","initialProducts","_s","searchTerm","setSearchTerm","selectedCategory","setSelectedCategory","filteredProducts","setFilteredProducts","categories","Set","map","p","category","productsToFilter","Array","isArray","products","filter","product","name","toLowerCase","includes","handleSearchChange","event","target","value","handleCategoryChange","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","length","id","_c","propTypes","arrayOf","shape","number","isRequired","string","price","image","defaultProps","$RefreshReg$"],"sources":["C:/product-catalog-app/src/ProductCatalog.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types'; // Jangan lupa install prop-types jika belum: npm install prop-types\r\nimport ProductCard from './components/ProductCard'; // Pastikan path ini benar ke ProductCard.jsx Anda\r\nimport './ProductCatalog.css'; // Impor file CSS\r\n\r\nfunction ProductCatalog({ initialProducts }) {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedCategory, setSelectedCategory] = useState(''); // '' berarti 'All'\r\n  const [filteredProducts, setFilteredProducts] = useState([]);\r\n\r\n  // Ekstrak kategori unik dari initialProducts\r\n  // Tambahkan 'All' sebagai opsi pertama dan pastikan tidak ada duplikat jika 'All' sudah ada di data\r\n  const categories = initialProducts \r\n    ? ['All', ...new Set(initialProducts.map(p => p.category))] \r\n    : ['All'];\r\n\r\n  useEffect(() => {\r\n    // Pastikan initialProducts adalah array sebelum melakukan operasi filter/map\r\n    const productsToFilter = Array.isArray(initialProducts) ? initialProducts : [];\r\n    \r\n    let products = productsToFilter;\r\n\r\n    // Filter berdasarkan kategori yang dipilih\r\n    if (selectedCategory && selectedCategory !== 'All') {\r\n      products = products.filter(product => product.category === selectedCategory);\r\n    }\r\n\r\n    // Filter berdasarkan istilah pencarian (cek nama produk)\r\n    if (searchTerm) {\r\n      products = products.filter(product =>\r\n        product.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    }\r\n\r\n    setFilteredProducts(products);\r\n  }, [searchTerm, selectedCategory, initialProducts]);\r\n\r\n  const handleSearchChange = (event) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  const handleCategoryChange = (event) => {\r\n    setSelectedCategory(event.target.value);\r\n  };\r\n\r\n  // Menangani kasus jika initialProducts belum terdefinisi atau bukan array\r\n  if (!Array.isArray(initialProducts)) {\r\n    // Anda bisa menampilkan pesan loading atau pesan error, atau null\r\n    // Untuk sekarang, kita tampilkan pesan bahwa data tidak tersedia jika initialProducts bukan array.\r\n    // Atau, jika initialProducts mungkin undefined saat pertama kali load, Anda bisa juga:\r\n    // if (initialProducts === undefined) return <p>Loading products...</p>;\r\n    // if (!Array.isArray(initialProducts)) return <p className=\"no-products-message\">Product data is not available.</p>;\r\n    // Untuk lebih aman, kita filter di useEffect dan biarkan render apa adanya\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"catalog-container\">\r\n      <h1 className=\"catalog-header\">üõçÔ∏è Product Catalog</h1>\r\n\r\n      <div className=\"catalog-controls\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search products by name...\"\r\n          value={searchTerm}\r\n          onChange={handleSearchChange}\r\n          className=\"search-input\"\r\n          aria-label=\"Search products\"\r\n        />\r\n        <select\r\n          value={selectedCategory}\r\n          onChange={handleCategoryChange}\r\n          className=\"category-select\"\r\n          aria-label=\"Filter by category\"\r\n        >\r\n          {categories.map(category => (\r\n            <option key={category} value={category === 'All' ? '' : category}>\r\n              {/* Tampilkan 'All Categories' untuk nilai default atau 'All' */}\r\n              {category === 'All' || category === '' ? 'All Categories' : category}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      {filteredProducts.length > 0 ? (\r\n        <div className=\"product-list-container\">\r\n          {filteredProducts.map(product => (\r\n            <ProductCard key={product.id} product={product} />\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <p className=\"no-products-message\">\r\n          {initialProducts && initialProducts.length > 0 ? 'üòî No products found matching your criteria.' : 'Loading products or no products available.'}\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Validasi Props\r\nProductCatalog.propTypes = {\r\n  initialProducts: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    category: PropTypes.string.isRequired,\r\n    image: PropTypes.string.isRequired,\r\n  })), // Bisa jadi null atau undefined saat pertama load jika data async\r\n};\r\n\r\n// Default props jika initialProducts tidak disediakan (opsional, tapi bagus)\r\nProductCatalog.defaultProps = {\r\n  initialProducts: [], // Default ke array kosong jika tidak ada prop yang diberikan\r\n};\r\n\r\nexport default ProductCatalog; // <-- Pastikan ini ada dan tidak ada kesalahan ketik"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}